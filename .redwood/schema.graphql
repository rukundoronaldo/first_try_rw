type Contact {
  id: Int!
  name: String!
  email: String!
  message: String!
  createdAt: DateTime!
}

input CreateContactInput {
  name: String!
  email: String!
  message: String!
}

input CreatePostInput {
  title: String!
  body: String!
  ceatedAt: DateTime!
}

scalar Date

scalar DateTime

scalar JSON

scalar JSONObject

type Mutation {
  createContact(input: CreateContactInput!): Contact
  createPost(input: CreatePostInput!): Post!
  deletePost(id: Int!): Post!
  updatePost(id: Int!, input: UpdatePostInput!): Post!
}

type Post {
  id: Int!
  title: String!
  body: String!
  ceatedAt: DateTime!
}

type Query {
  contacts: [Contact!]!
  post(id: Int!): Post
  posts: [Post!]!
  redwood: Redwood
}

type Redwood {
  version: String
  currentUser: JSON
  prismaVersion: String
}

scalar Time

input UpdateContactInput {
  name: String
  email: String
  message: String
}

input UpdatePostInput {
  title: String
  body: String
  ceatedAt: DateTime
}
