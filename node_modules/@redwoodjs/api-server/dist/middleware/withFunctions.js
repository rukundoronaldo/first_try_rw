"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = exports.setLambdaFunctions = void 0;

var _now = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/date/now"));

var _path = _interopRequireDefault(require("path"));

var _bodyParser = _interopRequireDefault(require("body-parser"));

var _glob = _interopRequireDefault(require("glob"));

var _lodash = _interopRequireDefault(require("lodash.escape"));

var _internal = require("@redwoodjs/internal");

var _awsLambda = require("../requestHandlers/awsLambda");

const LAMBDA_FUNCTIONS = {};

const setLambdaFunctions = foundFunctions => {
  for (const fnPath of foundFunctions) {
    const routeName = _path.default.basename(fnPath).replace('.js', '');

    const {
      handler
    } = require(fnPath);

    LAMBDA_FUNCTIONS[routeName] = handler;

    if (!handler) {
      console.warn(routeName, 'at', fnPath, 'does not have a function called handler defined.');
    }
  }
};

exports.setLambdaFunctions = setLambdaFunctions;

const lambdaRequestHandler = async (req, res) => {
  const {
    routeName
  } = req.params;

  if (!LAMBDA_FUNCTIONS[routeName]) {
    const errorMessage = `Function "${routeName}" was not found.`;
    console.error(errorMessage);
    res.status(404).send((0, _lodash.default)(errorMessage));
    return;
  }

  return (0, _awsLambda.requestHandler)(req, res, LAMBDA_FUNCTIONS[routeName]);
};

const withFunctions = (app, apiRootPath) => {
  app.use(_bodyParser.default.text({
    type: ['text/*', 'application/json', 'multipart/form-data']
  }));
  app.use(_bodyParser.default.raw({
    type: '*/*',
    limit: process.env.BODY_PARSER_LIMIT
  }));
  const rwjsPaths = (0, _internal.getPaths)();
  console.log('Importing API... ');
  const ts = (0, _now.default)();

  const apiFunctions = _glob.default.sync('dist/functions/*.{ts,js}', {
    cwd: rwjsPaths.api.base,
    absolute: true
  });

  setLambdaFunctions(apiFunctions);
  console.log('Imported in', (0, _now.default)() - ts, 'ms');
  app.all(`${apiRootPath}:routeName`, lambdaRequestHandler);
  app.all(`${apiRootPath}:routeName/*`, lambdaRequestHandler);
  return app;
};

var _default = withFunctions;
exports.default = _default;